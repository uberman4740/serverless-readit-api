service: reddit-app-api

# Use the serverless-webpack plugin to transpile ES6
plugins:
  - serverless-webpack
  - serverless-offline

# serverless-webpack configuration
# Enable auto-packing of external modules
custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

provider:
  name: aws
  runtime: nodejs8.10
  stage: prod
  region: us-east-1

  # 'iamRoleStatements' defines the permission policy for the Lambda function.
  # In this case Lambda functions are granted with permissions to access DynamoDB.
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-east-1:*:*"

functions:
  # Defines an HTTP API endpoint that calls the main function in create.js
  # - path: url path is /notes
  # - method: POST request
  # - cors: enabled CORS (Cross-Origin Resource Sharing) for browser cross
  #     domain api call
  # - authorizer: authenticate using the AWS IAM role
  createPost:
    handler: create_post.main
    events:
      - http:
          path: posts
          method: post
          cors: true
          authorizer: aws_iam
  getPost:
        # Defines an HTTP API endpoint that calls the main function in get.js
        # - path: url path is /notes/{id}
        # - method: GET request
        handler: get_post.main
        events:
          - http:
              path: posts/{id}
              method: get
              cors: true
              authorizer: aws_iam
  updatePost:
        # Defines an HTTP API endpoint that calls the main function in update.js
        # - path: url path is /notes/{id}
        # - method: PUT request
        handler: update_post.main
        events:
          - http:
              path: posts/{id}
              method: put
              cors: true
              authorizer: aws_iam
  deletePost:
      # Defines an HTTP API endpoint that calls the main function in delete.js
      # - path: url path is /notes/{id}
      # - method: DELETE request
      handler: delete_post.main
      events:
        - http:
            path: posts/{id}
            method: delete
            cors: true
            authorizer: aws_iam
  updatePostVote:
      # Defines an HTTP API endpoint that calls the main function in update.js
      # - path: url path is /notes/{id}
      # - method: PUT request
      handler: update_post_vote.main
      events:
        - http:
            path: posts/{id}
            method: put
            cors: true
            authorizer: aws_iam
  getPostsAll:
    # Defines an HTTP API endpoint that calls the main function in list.js
    # - path: url path is /notes
    # - method: GET request
    handler: get_posts_all.main
    events:
      - http:
          path: posts
          method: get
          cors: true
          authorizer: aws_iam

  createComment:
    # Defines an HTTP API endpoint that calls the main function in list.js
    # - path: url path is /notes
    # - method: GET request
    handler: create_comment.main
    events:
      - http:
          path: comments
          method: post
          cors: true
          authorizer: aws_iam
  getComment:
      # Defines an HTTP API endpoint that calls the main function in get.js
      # - path: url path is /notes/{id}
      # - method: GET request
      handler: get_comment.main
      events:
        - http:
            path: comments/{id}
            method: get
            cors: true
            authorizer: aws_iam

  getPostComments:
        handler: get_post_comments.main
        events:
          - http:
              path: posts/{id}/comments
              method: get
              cors: true
              authorizer: aws_iam

  deleteComment:
      # Defines an HTTP API endpoint that calls the main function in delete.js
      # - path: url path is /notes/{id}
      # - method: DELETE request
      handler: delete_comment.main
      events:
        - http:
            path: comments/{id}
            method: delete
            cors: true
            authorizer: aws_iam
  updateComment:
      # Defines an HTTP API endpoint that calls the main function in update.js
      # - path: url path is /notes/{id}
      # - method: PUT request
      handler: update_comment.main
      events:
        - http:
            path: comments/{id}
            method: put
            cors: true
            authorizer: aws_iam
  updateCommentVote:
      # Defines an HTTP API endpoint that calls the main function in update.js
      # - path: url path is /notes/{id}
      # - method: PUT request
      handler: update_comment_vote.main
      events:
        - http:
            path: comments/{id}
            method: put
            cors: true
            authorizer: aws_iam
  getCategories:
      # Defines an HTTP API endpoint that calls the main function in update.js
      # - path: url path is /notes/{id}
      # - method: PUT request
      handler: get_categories.main
      events:
        - http:
            path: categories
            method: get
            cors: true
            authorizer: aws_iam
  categoryPostsList:
    # Defines an HTTP API endpoint that calls the main function in list.js
    # - path: url path is /notes
    # - method: GET request
    handler: get_posts_category.main
    events:
      - http:
          path: categories/{id}
          method: get
          cors: true
          authorizer: aws_iam
